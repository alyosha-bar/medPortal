// Code generated by MockGen. DO NOT EDIT.
// Source: ./handlers/doctor_handler.go

// Package mock_handlers is a generated GoMock package.
package mock_handlers

import (
	reflect "reflect"

	models "github.com/alyosha-bar/medPortal/models"
	gomock "github.com/golang/mock/gomock"
)

// MockDoctorService is a mock of DoctorService interface.
type MockDoctorService struct {
	ctrl     *gomock.Controller
	recorder *MockDoctorServiceMockRecorder
}

// MockDoctorServiceMockRecorder is the mock recorder for MockDoctorService.
type MockDoctorServiceMockRecorder struct {
	mock *MockDoctorService
}

// NewMockDoctorService creates a new mock instance.
func NewMockDoctorService(ctrl *gomock.Controller) *MockDoctorService {
	mock := &MockDoctorService{ctrl: ctrl}
	mock.recorder = &MockDoctorServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDoctorService) EXPECT() *MockDoctorServiceMockRecorder {
	return m.recorder
}

// GetPatientsByDoctor mocks base method.
func (m *MockDoctorService) GetPatientsByDoctor(doctorID uint) ([]models.Patient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPatientsByDoctor", doctorID)
	ret0, _ := ret[0].([]models.Patient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPatientsByDoctor indicates an expected call of GetPatientsByDoctor.
func (mr *MockDoctorServiceMockRecorder) GetPatientsByDoctor(doctorID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPatientsByDoctor", reflect.TypeOf((*MockDoctorService)(nil).GetPatientsByDoctor), doctorID)
}

// UpdateMedicalNotes mocks base method.
func (m *MockDoctorService) UpdateMedicalNotes(doctorID, patientID uint, medicalNotes string) (models.Patient, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMedicalNotes", doctorID, patientID, medicalNotes)
	ret0, _ := ret[0].(models.Patient)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateMedicalNotes indicates an expected call of UpdateMedicalNotes.
func (mr *MockDoctorServiceMockRecorder) UpdateMedicalNotes(doctorID, patientID, medicalNotes interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMedicalNotes", reflect.TypeOf((*MockDoctorService)(nil).UpdateMedicalNotes), doctorID, patientID, medicalNotes)
}
